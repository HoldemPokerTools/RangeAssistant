{"version":3,"sources":["components/Spin.js","utils/numbers.js","utils/shorten.js","utils/range.js","utils/objects.js","utils/colors.js","data/index.js","pages/BuildRange.js","pages/NotFound.js","components/Dropzone.js","ranges/index.js","pages/ViewRanges.js","assets/overview.jpg","assets/import.jpg","assets/weights.jpg","assets/frequency.jpg","assets/download.jpg","assets/logo.png","App.js","serviceWorker.js","index.js"],"names":["CustomSpin","indicator","LoadingOutlined","style","fontSize","spin","getRandomInt","min","max","Math","ceil","floor","random","rankCodes","axArray","Object","keys","reverse","slice","kxArray","qxArray","jxArray","txArray","_9xArray","_8xArray","toHash","highRank","arr","reduce","acc","next","idx","assign","_size","length","ax","kx","qx","jx","tx","_9x","_8x","comboGroupReducer","push","shortenPairs","pairs","containedCodes","Array","fill","forEach","p","code","filter","i","groupifyPairs","map","group","first","last","shortenNonPairs","combos","suffix","orderedHashes","remainingCombos","Set","hash","groups","k","has","processCombos","flat","delete","notations","x","toShortNotation","concat","from","ajv","Ajv","strict","addSchema","schema","getSchema","validate","compile","rangeStringFormatters","gtoplus","label","getWeightedRangeString","rangeString","weight","toFixed","pio","split","join","combosToRangeString","weightedCombos","format","formatter","weightCombosMap","combo","entries","shortenRange","parseFloat","replaceAll","actionComboStyler","actions","bgString","total","a","b","percentages","c","sum","frequency","color","background","frequencyComboStyler","processedCombos","current","cumulativeFrequencies","rng","findIndex","f","getAction","backgroundColor","find","defaultTags","offsuit","suited","rank1","rank2","suit","add","Error","sortOut","ps","os","su","nonpairs","osArray","suArray","intersection","replace","intersectionFilter","RegExp","unsuitNonPairs","filterUndefinedKeys","obj","key","undefined","isArray","every","v","colors","value","name","db","PouchDB","createRange","range","post","then","res","get","id","deleteRange","rangeId","remove","deleteAllRanges","allDocs","include_docs","rows","row","_id","_rev","doc","_deleted","bulkDocs","Title","Typography","Text","Option","Select","BuildRange","useState","setRange","loading","setLoading","error","setError","selected","setSelected","copying","setCopying","clipboard","setClipboard","weightedCombosInRange","setWeightedCombosInRange","useParams","useEffect","docId","r","fromEntries","startsWith","catch","err","console","finally","isValid","updatedRange","put","updateRange","debug","errors","some","actionWeight","inRange","actionWeights","totalWeights","handleActionChange","updates","e","updatedActions","handleSimplePropChange","prop","to","state","textAlign","Spin","width","direction","level","editable","onChange","title","author","tags","placeholder","mode","tokenSeparators","tag","gutter","xs","span","offset","sm","md","lg","xl","colorize","onPointerDown","val","onPointerUp","onPointerEnter","comboStyle","boxShadow","action","display","alignItems","position","disabled","size","flexGrow","target","onSelect","border","marginRight","minHeight","minWidth","type","onClick","newValue","_","removeAction","DeleteFilled","marginLeft","placement","checked","checkedChildren","TableOutlined","availableColors","indexOf","height","actionIdx","existing","updatedCombos","handleComboActionChange","icon","CopyOutlined","FormatPainterOutlined","description","overflowWrap","copyable","text","ExclamationCircleOutlined","NotFound","location","status","subTitle","message","extra","Dropzone","children","onDropFiles","onDrop","useCallback","acceptedFiles","useDropzone","getRootProps","isDragActive","className","examples","rfi","vsbet","Paragraph","RangeTile","frequencyMode","history","useHistory","styler","strong","content","trigger","InfoCircleOutlined","showText","EditOutlined","data","fileDownload","JSON","stringify","toLowerCase","DownloadOutlined","onConfirm","okText","cancelText","DeleteOutlined","ActionsList","marginBottom","NewRangeFormModal","visible","onSubmit","onImport","onCancel","Form","useForm","form","onOk","validateFields","template","resetFields","FileAddFilled","initialValues","layout","Item","required","rules","ViewRanges","ranges","setRanges","setFrequencyMode","refreshRate","setRefreshRate","setVisible","setTags","setRng","refreshRng","interval","setInterval","clearInterval","changes","cb","listener","live","since","on","registerListener","change","deleted","cancel","parseRange","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsText","readFile","parse","createNewRange","filteredRanges","t","includes","allowClear","sort","PlusCircleOutlined","variant","RedoOutlined","precision","xxl","files","all","success","log","parser","UAParser","Header","Layout","Footer","Content","getOSIcon","AppleFilled","WindowsFilled","getOSAppExtensionIcon","getOS","Intro","onClose","carousel","useRef","NextButton","PreviousButton","prev","DoneButton","CarouselControls","showPrev","showNext","showDone","justifyContent","CarouselImage","src","alt","margin","afterClose","footer","dotPosition","dots","ref","overview","importImg","weightsImg","download","SiteHeader","onOpenHelp","logo","SiteFooter","href","rel","borderRadius","App","localStorage","getItem","introVisible","setIntroVisible","exact","path","setItem","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d03e2c11.chunk.js","sourcesContent":["import React from \"react\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nexport const CustomSpin = () => (<Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}/>)\n\nexport default CustomSpin;\n","export const getRandomInt = (min = 1, max = 100) => {\n  min = Math.ceil(Math.max(1, min));\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n","const rankCodes = {\n  '2': 0,\n  '3': 1,\n  '4': 2,\n  '5': 3,\n  '6': 4,\n  '7': 5,\n  '8': 6,\n  '9': 7,\n  'T': 8,\n  'J': 9,\n  'Q': 10,\n  'K': 11,\n  'A': 12\n}\n\nconst ranks = Object.keys(rankCodes).reverse();\nconst axArray = ranks.slice(1);\nconst kxArray = axArray.slice(1);\nconst qxArray = kxArray.slice(1);\nconst jxArray = qxArray.slice(1);\nconst txArray = jxArray.slice(1);\nconst _9xArray = txArray.slice(1);\nconst _8xArray = _9xArray.slice(1);\n\n// Create hash with keys as card ranks, and values as their codes\nconst toHash = (highRank, arr) => {\n  return arr.reduce((acc, next, idx) => Object.assign(acc, {[highRank + next]: idx}), {_size: arr.length});\n}\n\nconst ax = toHash('A', axArray)\nconst kx = toHash('K', kxArray)\nconst qx = toHash('Q', qxArray)\nconst jx = toHash('J', jxArray)\nconst tx = toHash('T', txArray)\nconst _9x = toHash('9', _9xArray)\nconst _8x = toHash('8', _8xArray)\n\n// reduce the array down to groups of consecutive items in i.e. no nulls between them\nconst comboGroupReducer = (acc, next) => {\n  const idx = acc.length - 1;\n  next === null\n    ? acc.push([])\n    : acc[idx].push(next)\n  return acc;\n};\n\nconst processCombos = (hash, combos) => {\n  // Given a hash e.g. Ax and combos e.g. [A2, A3, K2...], generate groups for combos which are in that hash\n  return Object\n    .keys(hash)\n    // create an array of combos where combo at an index is the key from the given hash whose value is === index if the key is in\n    // the given combos (otherwise null). e.g. for Ax, the value at index 0, will be A if AQ is in combos else null\n    .reduce((acc, k) => {\n      acc[hash[k]] = combos.has(k) ? k : null;\n      return acc;\n    }, new Array(hash._size))\n    .reduce(comboGroupReducer, [[]])\n    .filter(i => i.length > 0);\n}\n\nconst groupifyPairs = (pairs) => {\n  const containedCodes = new Array(13).fill(null);\n\n  pairs.forEach(p => {\n    const code = rankCodes[p[0]]\n    containedCodes[code] = p\n  });\n\n  return containedCodes\n    .reverse()\n    .reduce(comboGroupReducer, [[]])\n    .filter(i => i.length > 0);\n}\n\nexport const shortenPairs = (pairs) => {\n  const toShortNotation = (group) => {\n    const first = group[0]\n    if (group.length === 1) return first\n    const last = group[group.length - 1]\n    return group[0] === 'AA' ? `${last}+` : `${first}-${last}`\n  }\n\n  const groups = groupifyPairs(pairs)\n  return groups.map(toShortNotation)\n}\n\nexport const shortenNonPairs = (combos, suffix) => {\n  const toShortNotation = suffix => (hash, group) => {\n    const first = group[0]\n    if (group.length === 1) return first\n    const last = group[group.length - 1]\n    return hash[first] === 0\n      ? `${last}${suffix}+`\n      : `${first}${suffix}-${last}${suffix}`;\n  }\n  // Detect connections in descending order\n  // Only accept all groups that are at least 3 long\n  const orderedHashes = [ ax, kx, qx, jx, tx, _9x, _8x ]\n  let remainingCombos = new Set(combos)\n  let results = orderedHashes\n    .reduce((acc, hash) => {\n      // Group combos according to ordered hashes e.g. group all Ax, Kx and ensure all groups have at least 3 combos\n      const groups = processCombos(hash, remainingCombos).filter(i => i.length >= 3)\n      // If a group is valid, remove it's combos from the remaining combos\n      groups.flat().forEach(i => {\n        remainingCombos.delete(i)\n      });\n      // Convert groups to short notation\n      const notations = groups.map(x => toShortNotation(suffix)(hash, x))\n      return acc.concat(notations)\n    }, []);\n\n  return results.concat(Array.from(remainingCombos).map(x => x + suffix))\n}\n\n","import {getRandomInt} from \"./numbers\";\nimport fileDownload from \"js-file-download\";\nimport Ajv from \"ajv\";\nimport schema from \"../data/range.schema.json\";\nimport { shortenPairs, shortenNonPairs } from \"./shorten\";\n\nconst ajv = new Ajv({strict: false});\najv.addSchema(schema);\nexport const validateActions = ajv.getSchema(\"actions\");\nexport const validateCombos = ajv.getSchema(\"combos\");\nexport const validate = ajv.compile(schema);\n\nexport const rangeStringFormatters = {\n  gtoplus: {label: \"GTO+\", getWeightedRangeString: (rangeString, weight) => weight === 100 ? rangeString : `[${weight.toFixed(1)}]${rangeString}[/${weight.toFixed(1)}]`},\n  pio: {label: \"PioSolver\", getWeightedRangeString: (rangeString, weight) => rangeString.split(\",\").map(i => `${i}:${(weight/100).toFixed(2)}`).join(\",\")}\n}\n\nexport const combosToRangeString = (weightedCombos, format) => {\n  const formatter = rangeStringFormatters[format].getWeightedRangeString;\n  const weightCombosMap = weightedCombos.reduce((acc, [combo, weight]) => {\n    return {\n      ...acc,\n      [weight]: (acc[weight] || []).concat([combo])\n    }\n  }, {});\n  return Object\n    .entries(weightCombosMap)\n    .map(([weight, combos]) => formatter(shortenRange(combos), parseFloat(weight)))\n    .join(\",\")\n    .replaceAll(\" \", \"\");\n}\n\nexport const actionComboStyler = (combos, actions) => combo => {\n  let bgString;\n  if (!combos[combo]) bgString = actions[0].color;\n  else {\n    bgString = \"linear-gradient(to left\";\n    const total = combos[combo].reduce((a, b) => a + b, 0);\n    const percentages = combos[combo].map((c) => (c / total) * 100);\n    let sum = 0;\n    actions.forEach((a, idx) => {\n      const frequency = percentages[idx];\n      sum += frequency;\n      bgString += `, ${a.color} ${sum - frequency}%, ${\n        a.color\n      } ${sum}%`;\n    });\n    bgString += \")\";\n  }\n  return {\n    background: bgString,\n  };\n}\n\n// use an RNG to select action according to frequencies\nconst getAction = (actions) => {\n  const cumulativeFrequencies = actions.reduce(\n    (a, x, i) => [...a, x + (a[i - 1] || 0)],\n    []\n  );\n  const rng = getRandomInt(\n    Math.min(...actions),\n    cumulativeFrequencies[cumulativeFrequencies.length - 1]\n  );\n  const idx = cumulativeFrequencies.findIndex((f, i) => {\n    return (\n      rng <= f &&\n      rng > (!cumulativeFrequencies[i - 1] ? 0 : cumulativeFrequencies[i - 1])\n    );\n  });\n  return idx;\n};\n\nexport const frequencyComboStyler = (combos, actions) => {\n  const processedCombos = Object.keys(combos).reduce((acc, current) => {\n    return { ...acc, [current]: getAction(combos[current]) };\n  }, {})\n\n  return (combo) => ({\n    backgroundColor: (\n      actions.find((a, i) => {\n        if (processedCombos[combo]) return i === processedCombos[combo];\n        return false;\n      }) || actions[0]\n    ).color,\n  })\n};\n\nexport const downloadRange = (data) => {\n  delete data._rev;\n  fileDownload(JSON.stringify(data), `${data.title.toLowerCase().replace(/\\s+/g, \"-\")}.range`, \"application/json\");\n};\n\nexport const readFile = (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = res => {\n      resolve(res.target.result);\n    };\n    reader.onerror = err => reject(err);\n    reader.readAsText(file);\n  });\n}\n\nexport const defaultTags = [\n  \"EP\", \"MP\", \"UTG\", \"UTG+1\", \"UTG+2\", \"LJ\", \"HJ\", \"CO\", \"BTN\", \"SB\", \"BB\",\n  \"vs EP\", \"vs MP\", \"vs UTG\", \"vs UTG+1\", \"vs UTG+2\", \"vs LJ\", \"vs HJ\", \"vs CO\", \"vs BTN\", \"vs SB\", \"vs BB\",\n  \"micro\", \"low stakes\", \"medium stakes\", \"high stakes\",\n  \"100BB\", \"200BB\", \"75BB\", \"50BB\", \"30BB\",\n  \"RFI\", \"Open\", \"vs limp\", \"vs open\", \"vs 3bet\", \"vs 4bet\", \"vs 5bet\",\n  \"vs small bet\", \"vs medium bet\", \"vs big bet\",\n  \"6max\", \"full ring\", \"heads up\",\n  \"GTO\", \"exploitative\", \"vs nit\", \"vs TAG\", \"vs LAG\", \"vs fish\", \"vs whale\",\n]\n\nconst sortOut = (combos) => {\n  const offsuit = new Set();\n  const suited = new Set();\n  const pairs = new Set();\n  combos.forEach(([rank1, rank2, suit]) => {\n    const combo = rank1 + rank2;\n    if (rank1 === rank2) pairs.add(combo)\n    else if (!suit || suit === \"o\") offsuit.add(combo)\n    else if (suit === \"s\") suited.add(combo)\n    else throw new Error(`Invalid suit ${suit} of ${combo}!`)\n  });\n\n  return { offsuit, suited, pairs }\n}\n\nconst unsuitNonPairs = (os, su) => {\n  const osArray = Array.from(os);\n  const suArray = Array.from(su);\n  const intersection = new Set();\n  for(const combo of osArray) if(su.has(combo.replace(/o/g, 's'))) intersection.add(combo.replace(/o/g, ''));\n\n  const intersectionFilter = suffix => i => !intersection.has(i.replace(new RegExp(suffix,\"g\"), ''));\n\n  return Array.from(intersection)\n    .concat(\n      osArray.filter(intersectionFilter(\"o\")),\n      suArray.filter(intersectionFilter(\"s\")),\n    );\n}\n\nexport const shortenRange = (combos) => {\n  const { offsuit, suited, pairs } = sortOut(combos);\n  const ps = shortenPairs(pairs);\n  const os = shortenNonPairs(offsuit, 'o');\n  const su = shortenNonPairs(suited, 's');\n  const nonpairs = unsuitNonPairs(new Set(os), new Set(su));\n\n  return ps.concat(nonpairs).join(', ');\n}\n","export const filterUndefinedKeys = (obj) => Object.keys(obj).reduce((acc, key) => {\n  if (obj[key] === undefined || (Array.isArray(obj[key]) && obj[key].every(v => v === 0))) return acc;\n  return {...acc, [key]: obj[key]};\n}, {});\n","export const colors = [\n  { value: \"#d3d3d3\", name: \"Grey\" },\n  { value: \"#7ec78e\", name: \"Green\" },\n  { value: \"#d9e90e\", name: \"Yellow\" },\n  { value: \"#e89679\", name: \"Peach\" },\n  { value: \"#6d9ec2\", name: \"Blue\" },\n  { value: \"#bb63fd\", name: \"Purple\" },\n  { value: \"#fd6363\", name: \"Red\" },\n  { value: \"#ea9900\", name: \"Orange\" },\n  { value: \"#46cec0\", name: \"Turquoise\" },\n  { value: \"#ffffff\", name: \"White\" },\n  { value: \"#e09cc5\", name: \"Pink\" },\n  { value: \"#8a0000\", name: \"Maroon\" },\n  { value: \"#06ce0c\", name: \"Bright Green\" },\n  { value: \"#1b9af7\", name: \"Bright Blue\" },\n];\n\nexport default colors;\n","import PouchDB from \"pouchdb\";\nconst db = new PouchDB(\"ranges\");\n\nexport const getRanges = () => db\n  .allDocs({ include_docs: true })\n  .then(data => data.rows.map((row) => row.doc));\n\nexport const getRange = (docId) => db.get(docId);\n\nexport const updateRange = (rangeId, updatedRange) => {\n  return db.get(rangeId)\n    .then(doc => Object.assign(doc, updatedRange))\n    .then(db.put);\n};\n\nexport const createRange = (range) => {\n  return db\n    .post(range)\n    .then(res => db.get(res.id));\n};\n\nexport const deleteRange = async (rangeId) => {\n  return db.get(rangeId)\n    .then(db.remove);\n};\n\nexport const registerListener = (cb) => {\n  const listener = db.changes({ live: true, since: \"now\", include_docs: true });\n  listener.on(\"change\", cb);\n  return listener;\n};\n\nexport const deleteAllRanges = async () => {\n  return db.allDocs({include_docs: true}).then(allDocs => {\n    return allDocs.rows.map(row => ({_id: row.id, _rev: row.doc._rev, _deleted: true}));\n  }).then(db.bulkDocs);\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Empty,\n  Button,\n  InputNumber,\n  Row,\n  Col,\n  Typography,\n  Space,\n  Input,\n  Select,\n  Switch,\n  Tooltip,\n} from \"antd\";\nimport Spin from \"../components/Spin\";\nimport { DeleteFilled, CopyOutlined, FormatPainterOutlined, TableOutlined, ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { HandMatrix } from \"@holdem-poker-tools/hand-matrix\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport { actionComboStyler, combosToRangeString, defaultTags, rangeStringFormatters, validate } from \"../utils/range\";\nimport { filterUndefinedKeys } from \"../utils/objects\";\nimport colors from \"../utils/colors\";\nimport { getRange, updateRange } from \"../data\";\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nfunction BuildRange() {\n  const [range, setRange] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(undefined);\n  const [selected, setSelected] = useState(undefined);\n  const [copying, setCopying] = useState(false);\n  const [clipboard, setClipboard] = useState(undefined);\n  const [weightedCombosInRange, setWeightedCombosInRange] = useState(undefined);\n  const { rangeId } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    getRange(rangeId)\n      .then(r => setRange(Object.fromEntries(\n        Object.entries(r).filter(([k]) => !k.startsWith(\"_\"))\n      )))\n      .catch(err => {\n        console.error(err);\n        setError(\"Unable to load range!\");\n      })\n      .finally(() => setLoading(false));\n  }, [setLoading, setError, rangeId]);\n\n  useEffect(() => {\n    const isValid = validate({_id: rangeId, ...range});\n    if (range && !copying && isValid) {\n      updateRange(rangeId, range).catch(console.error)\n    } else console.debug(isValid.errors)\n  }, [range, copying, rangeId]);\n\n  useEffect(() => {\n    if (range) {\n      const { combos, actions } = range;\n      setWeightedCombosInRange(Object.entries(combos).filter(([_, actionWeights]) => {\n        return actionWeights.some((actionWeight, idx) => actions[idx].inRange && actionWeight > 0);\n      }).map(([combo, actionWeights]) => {\n        const totalWeights = actionWeights.reduce((acc, next) => acc + next,0);\n        const inRangeTotal = actionWeights.reduce((acc, next, idx) => actions[idx].inRange ? acc + next : acc,0);\n        return [combo, (inRangeTotal/totalWeights * 100).toFixed(2)]\n      }));\n    }\n  }, [range])\n\n  const handleComboActionChange = (combo, actionIdx, newValue) => {\n    const { combos, actions } = range;\n    const existing = [...(combos[combo] || actions.map((_) => 0))];\n    const updatedCombos = {\n      ...combos,\n      [combo]: existing.map((val, idx) => (idx === actionIdx ? newValue : val)),\n    };\n    setRange(e => ({...e, combos: filterUndefinedKeys(updatedCombos)}));\n  };\n\n  const handleActionChange = (idx, updates) => {\n    setRange(e => {\n      let updatedActions = [...e.actions];\n      updatedActions[idx] = {\n        ...e.actions[idx],\n        ...updates,\n      };\n      return {...e, actions: updatedActions};\n    });\n  };\n\n  const addAction = () => {\n    const availableColors = colors.filter(\n      (c) => range.actions.map((a) => a.color).indexOf(c.value) === -1\n    );\n    setRange(e => ({\n      ...e,\n      actions: [\n        ...e.actions,\n        { name: \"New Action\", color: availableColors[0].value, inRange: true },\n      ],\n      combos: Object.entries(e.combos).reduce((acc, [k, v]) => {\n        return {\n          ...acc,\n          [k]: v.concat([0]),\n        };\n      }, {})\n    }));\n    setClipboard(undefined);\n  };\n\n  const removeAction = (idx) => {\n    setRange(e => ({\n      ...e,\n      actions: [...e.actions.slice(0, idx), ...e.actions.slice(idx + 1)],\n      combos: Object.entries(e.combos).reduce((acc, [k, v]) => {\n        const newValue = v.filter((_, i) => i !== idx);\n        if (newValue.every((val) => val === 0)) return acc;\n        return {\n          ...acc,\n          [k]: newValue,\n        };\n      }, {})\n    }));\n    setClipboard(undefined);\n  };\n\n  const handleSelect = (val) => {\n    setSelected(val);\n    setCopying(true);\n  }\n\n  const handleMouseEnter = (val) => {\n    if (selected && copying) {\n      setRange(e => ({\n        ...e,\n        combos: filterUndefinedKeys({\n          ...e.combos,\n          [val]: e.combos[selected]\n        })\n      }));\n    }\n  }\n\n  const handlePaste = () => {\n    setRange(e => ({\n      ...e,\n      combos: filterUndefinedKeys({\n        ...e.combos,\n        [selected]: clipboard\n      })\n    }));\n  }\n\n  const handleSimplePropChange = (prop) => (value) => setRange(e => ({...e, [prop]: value}));\n\n  if (error) {\n    return <Redirect to=\"/notfound\" state={{}}/>\n  }\n\n  if (loading) {\n    return <div style={{textAlign: \"center\"}}><Spin/> Loading...</div>\n  }\n\n  return (\n    <div>\n      <Space style={{width: \"100%\"}} direction=\"vertical\">\n        <div>\n          <Title level={3} editable={{ onChange: handleSimplePropChange(\"title\") }}>{range.title}</Title>\n          <Text editable={{ onChange: handleSimplePropChange(\"author\") }}>{range.author}</Text>\n        </div>\n        <div>\n          <Title level={4}>\n            Tags\n          </Title>\n          <Text>\n            Use tags for hero position, villain position, bet size etc. to help when searching for a specific\n            range. You can use the default tags or add your own new tags.\n          </Text>\n          <Select value={range.tags} placeholder=\"Select tags...\" mode=\"tags\" style={{ width: '100%' }} onChange={handleSimplePropChange(\"tags\")} tokenSeparators={[',']}>\n            {[...new Set(defaultTags.concat(range.tags))].map(tag => <Option key={tag} value={tag}>{tag}</Option>)}\n          </Select>\n        </div>\n        <Row gutter={[15, 15]}>\n          <Col\n            xs={{ span: 24, offset: 0 }}\n            sm={{ span: 16, offset: 4 }}\n            md={{ span: 12, offset: 0 }}\n            lg={12}\n            xl={12}\n          >\n            <Space style={{ width: \"100%\" }} direction=\"vertical\">\n              <Title level={4}>Combos</Title>\n              <HandMatrix\n                colorize={false}\n                onPointerDown={handleSelect}\n                onPointerUp={() => setCopying(false)}\n                onPointerEnter={handleMouseEnter}\n                comboStyle={combo => ({\n                  ...actionComboStyler(range.combos, range.actions)(combo),\n                  boxShadow:\n                    combo === selected ? \"inset 0px 0px 0px 5px #fff\" : \"none\",\n                })}\n              />\n              <Text><strong>Pro Tip:</strong> You can \"drag\" a combo to copy it's action weights to another combo.</Text>\n            </Space>\n          </Col>\n          <Col\n            xs={{ span: 24, offset: 0 }}\n            sm={{ span: 16, offset: 4 }}\n            md={{ span: 12, offset: 0 }}\n            lg={12}\n            xl={12}\n          >\n            <Space style={{ width: \"100%\" }} direction=\"vertical\">\n              <Title level={4}>Actions</Title>\n              {range.actions.map((action, idx) => (\n                <div\n                  key={idx}\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    position: \"relative\",\n                  }}\n                >\n                  <Input\n                    disabled={idx === 0}\n                    size=\"large\"\n                    style={{ flexGrow: 1 }}\n                    value={action.name}\n                    onChange={(e) =>\n                      handleActionChange(idx, { name: e.target.value })\n                    }\n                  />\n                  <Select\n                    size=\"large\"\n                    value={action.color}\n                    onSelect={(val) => handleActionChange(idx, { color: val })}\n                  >\n                    {colors.map((c) => (\n                      <Option key={c.value} value={c.value}>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                      <span\n                        style={{\n                          border: \"1px solid lightgrey\",\n                          marginRight: 10,\n                          minHeight: 20,\n                          minWidth: 20,\n                          backgroundColor: c.value,\n                        }}\n                      />{\" \"}\n                          {c.name}\n                        </div>\n                      </Option>\n                    ))}\n                  </Select>\n                  <Button\n                    type=\"danger\"\n                    size=\"large\"\n                    disabled={range.actions.length === 1 || idx === 0}\n                    onClick={() => removeAction(idx)}\n                  >\n                    <DeleteFilled />\n                  </Button>\n                  <div style={{marginLeft: 5}}>\n                    <Tooltip placement=\"topRight\" title=\"Include in range string\">\n                      <Switch\n                        disabled={idx === 0}\n                        onChange={checked => handleActionChange(idx, { inRange: checked })}\n                        checkedChildren={<TableOutlined />}\n                        checked={action.inRange}\n                      />\n                    </Tooltip>\n                  </div>\n                </div>\n              ))}\n              <Button\n                onClick={addAction}\n                type=\"dashed\"\n                disabled={range.actions.length === colors.length}\n              >\n                Add Action\n              </Button>\n              {!selected ? (\n                <Empty description=\"Select a combo to configure\" />\n              ) : (\n                <Space style={{ width: \"100%\" }} direction=\"vertical\">\n                  <Title level={4}>\n                    Combo Action Weights: {selected}\n                  </Title>\n                  {range.actions.map((action, i) => (\n                    <div key={i} style={{ display: \"flex\", alignItems: \"center\" }}>\n                      <span style={{\n                        border: \"1px solid lightgrey\",\n                        marginRight: 10,\n                        height: 20,\n                        width: 20,\n                        backgroundColor: action.color,\n                      }}/>\n                      <InputNumber\n                        value={range.combos[selected] ? range.combos[selected][i] : 0}\n                        min={0}\n                        onChange={(val) =>\n                          handleComboActionChange(selected, i, val)\n                        }\n                      />\n                    </div>\n                  ))}\n                  {(range.combos[selected] || clipboard) && <Space>\n                    {range.combos[selected] && <Button onClick={() => setClipboard(range.combos[selected])} icon={<CopyOutlined />}>Copy</Button>}\n                    {clipboard && <Button onClick={handlePaste} icon={<FormatPainterOutlined />}>Paste</Button>}\n                  </Space>}\n                </Space>\n              )}\n              <div>\n                <Title level={4}>\n                  Copy Range String\n                </Title>\n                {\n                  weightedCombosInRange.length\n                    ? <Space>\n                        {\n                          Object.keys(rangeStringFormatters).map(i =>\n                            <Text  style={{overflowWrap: \"anywhere\"}} copyable={{text: combosToRangeString(weightedCombosInRange, i)}}>\n                            {rangeStringFormatters[i].label}\n                            </Text>\n                          )\n                        }\n                      </Space>\n                    : <Text>\n                      <ExclamationCircleOutlined /> To generate a range string, ensure at least one combo has an action\n                      weight greater than 0 for at least one action which is marked as <strong>included in range</strong>\n                    </Text>\n                }\n              </div>\n            </Space>\n          </Col>\n        </Row>\n      </Space>\n    </div>\n  );\n}\n\nexport default BuildRange;\n","import React from \"react\";\nimport { Button, Result } from \"antd\";\nimport { Link } from 'react-router-dom'\n\nexport const NotFound = ({ location }) => {\n  return (\n    <Result\n      status=\"404\"\n      title={location?.state?.title || \"Page Not Found\"}\n      subTitle={location?.state?.message || \"Sorry but the page you're looking for doesn't exist!\"}\n      extra={[\n        <Link to=\"/\"><Button>Return Home</Button></Link>\n      ]}\n    />\n  )\n}\n\nexport default NotFound;\n","import React, {useCallback} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport \"./Dropzone.css\";\n\nfunction Dropzone({ children, onDropFiles }) {\n  const onDrop = useCallback(acceptedFiles => {\n    onDropFiles && onDropFiles(acceptedFiles);\n  }, [onDropFiles]);\n  const {getRootProps, isDragActive} = useDropzone({onDrop});\n\n  return (\n    <div className={`drop-overlay ${isDragActive ? \"dropping\" : \"\"}`} {...getRootProps()}>\n      {children}\n    </div>\n  );\n};\n\nexport default Dropzone;\n","import rfi from \"./rfi.example.json\";\nimport vsbet from \"./vsbet.example.json\";\n\nexport const examples = {\n  rfi, vsbet\n}\n\nexport default examples;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Typography,\n  Modal,\n  Form,\n  Input,\n  message,\n  Space,\n  Row,\n  Col,\n  Switch,\n  Select,\n  Tooltip,\n  InputNumber,\n  Divider,\n  Popconfirm,\n  Popover\n} from \"antd\";\nimport { EditOutlined, DeleteOutlined, PlusCircleOutlined, DownloadOutlined, FileAddFilled, CopyOutlined, RedoOutlined, InfoCircleOutlined } from \"@ant-design/icons\"\nimport {\n  Redirect,\n  useHistory\n} from \"react-router-dom\";\nimport { HandMatrix } from \"@holdem-poker-tools/hand-matrix\";\nimport Spin from \"../components/Spin\";\nimport Dropzone from \"../components/Dropzone\";\nimport { createRange, deleteAllRanges, deleteRange, getRanges, registerListener } from \"../data\";\nimport colors from \"../utils/colors\";\nimport {actionComboStyler, frequencyComboStyler, downloadRange, readFile, validate} from \"../utils/range\";\nimport { getRandomInt } from \"../utils/numbers\";\nimport examples from \"../ranges/index\";\nimport \"./ViewRanges.css\";\nconst { Title, Paragraph, Text } = Typography;\nconst { Option } = Select;\n\nconst MIN_REFRESH_RATE = 3;\n\nconst ViewRanges = () => {\n  const history = useHistory();\n  const [ranges, setRanges] = useState([]);\n  const [frequencyMode, setFrequencyMode] = useState(false);\n  const [refreshRate, setRefreshRate] = useState(10);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(undefined);\n  const [visible, setVisible] = useState(false);\n  const [tags, setTags] = useState([]);\n  const [rng, setRng] = useState(0);\n\n  useEffect(() => {\n    if (refreshRate >= MIN_REFRESH_RATE) {\n      refreshRng();\n      const interval = setInterval(() => {\n        refreshRng();\n      },refreshRate * 1000);\n      return () => clearInterval(interval);\n    }\n  }, [refreshRate, setRng]);\n\n  useEffect(() => {\n    setLoading(true);\n    getRanges()\n      .then(setRanges)\n      .catch(err => {\n        console.error(err);\n        setError(\"Unable to load ranges!\");\n      })\n      .finally(() => setLoading(false));\n  }, [setLoading, setError, setRanges]);\n\n  useEffect(() => {\n    const changes = registerListener((change) => {\n      setRanges(e => {\n        if (change.deleted) {\n          return e.filter(i => i._id !== change.id);\n        }\n        const idx = e.findIndex(i => i._id === change.id);\n        return Object.assign([], e, {[idx !== -1 ? idx : e.length]: change.doc})\n      })\n    });\n\n    return () => changes.cancel();\n  }, [setRanges]);\n\n  if (error) {\n    return <Redirect to=\"/notfound\" state={{}}/>\n  }\n\n  const refreshRng = () => {\n    setRng(getRandomInt());\n  }\n\n  const parseRange = (file) => {\n    return readFile(file)\n      .then(JSON.parse)\n      .then(range => {\n        if (!validate(range)) throw new Error(\"Invalid range\");\n        return range;\n      });\n  }\n\n  const handleImport = (files) => {\n    return Promise.all(files.map(parseRange))\n      .then(ranges => ranges.forEach(createNewRange))\n      .then(() => message.success(\"Import successful!\"))\n      .catch(err => {\n        console.log(err);\n        message.error(\"One or more of your range files are invalid!\");\n      });\n    ;\n  }\n\n  const handleSubmit = (data) => {\n    return createNewRange(data)\n      .then((doc) => {\n        setVisible(false);\n        history.push(`/range/${doc._id}`);\n      });\n  }\n\n  const createNewRange = ({title, author, tags = [], combos = {}, actions = [\n    {name: \"Fold\", color: colors[0].value, inRange: false},\n    {name: \"Call\", color: colors[1].value, inRange: true},\n    {name: \"Raise\", color: colors[2].value, inRange: true},\n  ]}) => {\n    return createRange({title, author, tags, combos, actions})\n      .catch(err => {\n        console.error(err);\n        message.error(\"Could not create range!\");\n      })\n    ;\n  }\n\n  const filteredRanges = ranges.filter(range => tags.length === 0 || tags.every(t => range.tags.includes(t)));\n\n  return (\n    <div>\n      { loading && <div style={{textAlign: \"center\"}}><Spin/> Loading...</div> }\n      { !loading && <Space direction=\"vertical\" style={{width: \"100%\"}}>\n        <div className=\"view-ranges-controls\">\n          <Space>\n            <Select value={tags} placeholder=\"Filter by tags...\" mode=\"multiple\" allowClear onChange={setTags}>\n              {[...new Set((ranges || []).map(range => range.tags).flat())].sort().map(tag => <Option key={tag} value={tag}>{tag}</Option>)}\n            </Select>\n            <Button icon={<PlusCircleOutlined/>} onClick={() => setVisible(true)}>Add Range</Button>\n            <Popconfirm\n              title=\"Are you sure you want to delete all ranges?\"\n              onConfirm={deleteAllRanges}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <Button variant=\"primary\" icon={<DeleteOutlined/>}>Delete All Ranges</Button>\n            </Popconfirm>\n            \n          </Space>\n        </div>\n        <Space>\n          <span>Frequency Mode: <Switch checked={frequencyMode} onChange={setFrequencyMode}/></span>\n          <span>RNG: {rng} <Tooltip title=\"Refresh RNG Now\"><RedoOutlined onClick={refreshRng}/></Tooltip></span>\n          <span>RNG refresh rate: <InputNumber min={MIN_REFRESH_RATE} precision={0} onChange={setRefreshRate} value={refreshRate}/></span>\n        </Space>\n        {\n          filteredRanges.length === 0\n            ? <div style={{textAlign: \"center\"}}>\n              <Title level={3}>No Ranges Found</Title>\n              {ranges.length === 0 && <Paragraph>You don't have any ranges yet!</Paragraph>}\n            </div>\n            : <Row gutter={[10, 10]}>\n              {filteredRanges.map((range) => {\n                return <Col key={range._id} xs={24} sm={12} md={8} lg={8} xl={6} xxl={4}>\n                  <RangeTile range={range} frequencyMode={frequencyMode}/>\n                </Col>\n              })}\n            </Row>\n        }\n      </Space> }\n      <NewRangeFormModal onImport={handleImport} visible={visible} onSubmit={handleSubmit} onCancel={() => setVisible(false)}/>\n    </div>\n  )\n}\n\nconst RangeTile = ({ range, frequencyMode }) => {\n  const history = useHistory();\n  let {title, author, actions, combos, tags, _id} = range;\n\n  const styler = frequencyMode\n    ? actionComboStyler(combos, actions)\n    : frequencyComboStyler(combos, actions);\n\n  return (<div>\n    <Text strong>{title} </Text>\n    <Popover placement=\"bottom\" title=\"Actions\" content={<ActionsList actions={range.actions}/>} trigger=\"click\">\n      <InfoCircleOutlined />\n    </Popover>\n    <HandMatrix showText={true} comboStyle={combo => ({\n      ...styler(combo),\n      fontSize: \"0.6rem\"\n    })} />\n    <Text type=\"secondary\">by {author}</Text>\n    <div style={{display: \"flex\"}}>\n      <Tooltip title=\"Edit Range\" placement=\"bottomLeft\">\n        <Button onClick={() => history.push(`range/${_id}`)} icon={<EditOutlined />} size=\"small\"/>\n      </Tooltip>\n      <Tooltip title=\"Duplicate Range\" placement=\"bottom\">\n        <Button onClick={() => createRange({title, author, actions, combos, tags})} icon={<CopyOutlined />} size=\"small\"/>\n      </Tooltip>\n      <Tooltip title=\"Download Range\" placement=\"bottom\">\n        <Button onClick={() => downloadRange(range)} icon={<DownloadOutlined />} size=\"small\"/>\n      </Tooltip>\n      <div className=\"spacer\"/>\n      <Popconfirm\n        title=\"Are you sure you want to delete this range?\"\n        onConfirm={() => deleteRange(_id)}\n        okText=\"Yes\"\n        cancelText=\"No\"\n      >\n        <Button type=\"primary\" icon={<DeleteOutlined />} size=\"small\"/>\n      </Popconfirm>\n    </div>\n    <div className=\"tag-container\">\n      {tags.map(tag => <div className=\"tag\" key={tag}>{tag}</div>)}\n    </div>\n  </div>)\n}\n\nconst ActionsList = ({actions}) => <>\n  {actions.map(action => <div style={{marginBottom: 5, display: \"flex\"}}>\n    <span style={{\n      border: \"1px solid lightgrey\",\n      marginRight: 10,\n      height: 20,\n      width: 20,\n      display: \"block\",\n      backgroundColor: action.color,\n    }}/> <Text>{action.name}</Text>\n  </div>)}\n</>\n\nconst NewRangeFormModal = ({ visible, onSubmit, onImport, onCancel }) => {\n  const [form] = Form.useForm();\n\n  const handleOk = () => {\n    form\n      .validateFields()\n      .then(data => {\n        let {template, ...range } = data;\n        switch (template) {\n          case \"rfi\":\n            Object.assign(range, examples.rfi);\n            break;\n          case \"vsbet\":\n            Object.assign(range, examples.vsbet);\n            break;\n          default:\n            console.debug(\"Creating range from scratch\");\n            break;\n        }\n        return onSubmit(range);\n      })\n      .then(() => form.resetFields())\n      .catch(console.debug)\n  }\n\n  const handleCancel = () => {\n    form.resetFields();\n    onCancel();\n  };\n\n  return (\n    <Modal\n      title=\"Add Range\"\n      visible={visible}\n      okText=\"Create\"\n      onOk={handleOk}\n      onCancel={handleCancel}\n    >\n      <Dropzone onDropFiles={onImport}>\n        <div>\n          <FileAddFilled style={{fontSize: 52}}/>\n          <h3>Drop your range file(s) here</h3>\n        </div>\n      </Dropzone>\n      <Divider/>\n      <Form initialValues={{template: \"rfi\"}} layout=\"vertical\" form={form}>\n        <Title level={5} style={{textAlign: \"center\"}}>Or create a range manually</Title>\n        <Form.Item\n          label=\"Range Name\"\n          required\n          name=\"title\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input a valid name for this range\",\n              min: 1,\n              max: 80,\n            },\n          ]}\n        >\n          <Input placeholder=\"6 Max Cash UTG RFI\" />\n        </Form.Item>\n        <Form.Item\n          label=\"Range Author\"\n          required\n          name=\"author\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input an author for this range\",\n              min: 1,\n              max: 48,\n            },\n          ]}\n        >\n          <Input placeholder=\"Your Name\" />\n        </Form.Item>\n        <Form.Item\n          label=\"Starting Template\"\n          required\n          name=\"template\"\n        >\n          <Select placeholder=\"Choose a template\">\n            <Option value=\"rfi\">RFI</Option>\n            <Option value=\"vsbet\">vs bet</Option>\n            <Option value=\"blank\">From scratch</Option>\n          </Select>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default ViewRanges;\n","export default __webpack_public_path__ + \"static/media/overview.89be7a72.jpg\";","export default __webpack_public_path__ + \"static/media/import.fa8277ce.jpg\";","export default __webpack_public_path__ + \"static/media/weights.5a45ad37.jpg\";","export default __webpack_public_path__ + \"static/media/frequency.2570a01f.jpg\";","export default __webpack_public_path__ + \"static/media/download.5d86d378.jpg\";","export default __webpack_public_path__ + \"static/media/logo.32255f87.png\";","import React, { useState, useRef } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport {\n  Layout,\n  Space,\n  Button,\n  Typography,\n  Carousel,\n  Modal,\n  Alert\n} from \"antd\";\nimport { AppleFilled, WindowsFilled, PlusCircleOutlined, CopyOutlined } from \"@ant-design/icons\";\nimport { UAParser } from \"ua-parser-js\";\nimport BuildRange from \"./pages/BuildRange\";\nimport NotFound from \"./pages/NotFound\";\nimport ViewRanges from \"./pages/ViewRanges\";\nimport overview from \"./assets/overview.jpg\";\nimport importImg from \"./assets/import.jpg\";\nimport weightsImg from \"./assets/weights.jpg\";\nimport frequency from \"./assets/frequency.jpg\";\nimport download from \"./assets/download.jpg\";\nimport logo from \"./assets/logo.png\";\nimport \"./App.css\";\nconst { Title, Paragraph, Text } = Typography;\n\nconst parser = new UAParser();\nconst { Header, Footer, Content } = Layout;\n\nconst getOSIcon = (os) => {\n  switch (os) {\n    case \"Mac\":\n      return <AppleFilled />;\n    case \"Windows\":\n      return <WindowsFilled/>\n    default:\n      return <></>;\n  }\n};\n\nconst getOSAppExtensionIcon = (os) => {\n  switch (os) {\n    case \"Mac\":\n      return \"dmg\";\n    case \"Windows\":\n      return \"exe\"\n    default:\n      throw new Error(`Unsupported OS: ${os}`);\n  }\n};\n\nconst os = [\"Mac\", \"Windows\"].find(\n  (i) => (parser.getOS().name || \"\").indexOf(i) !== -1\n);\n\nfunction App() {\n  const [introVisible, setIntroVisible] = useState(!localStorage.getItem(\"showIntro\"));\n\n  const handleIntroClose = () => {\n    setIntroVisible(false);\n    localStorage.setItem(\"showIntro\", 1)\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Router>\n        <SiteHeader onOpenHelp={() => setIntroVisible(true)}/>\n        <Content className=\"content\">\n          <div className=\"site-layout-content gutter\">\n            <Switch>\n              <Route exact path=\"/\">\n                <ViewRanges/>\n              </Route>\n              <Route exact path=\"/range/:rangeId\">\n                <BuildRange />\n              </Route>\n              <Route path=\"*\">\n                <NotFound />\n              </Route>\n            </Switch>\n            <Intro visible={introVisible} onClose={handleIntroClose}/>\n          </div>\n        </Content>\n        <SiteFooter/>\n      </Router>\n    </Layout>\n  );\n}\n\nconst Intro = ({ visible, onClose }) => {\n  const carousel = useRef();\n\n  const NextButton = () => <Button onClick={() => carousel.current?.next()}>Next</Button>;\n  const PreviousButton = () => <Button onClick={() => carousel.current?.prev()}>Prev</Button>;\n  const DoneButton = () => <Button type=\"primary\" onClick={onClose}>Let's Go</Button>;\n  const CarouselControls = ({ showPrev=true, showNext=true, showDone=false }) => (\n    <Space style={{display: \"flex\", justifyContent: \"center\"}}>\n      {showPrev && <PreviousButton/>}\n      {showNext && <NextButton/>}\n      {showDone && <DoneButton/>}\n    </Space>\n  )\n  const CarouselImage = ({src, alt, width=\"100%\"}) => <img src={src} width={width} style={{margin: \"auto\", marginBottom: 15, display: \"block\"}} alt={alt} />;\n\n  return (\n    <Modal\n      onCancel={onClose}\n      afterClose={onClose}\n      visible={visible}\n      footer={null}\n    >\n      <Carousel dotPosition=\"top\" dots={{className: \"carousel-dots\"}} ref={carousel}>\n        <div className=\"intro-slide\">\n          <Title level={3}>Welcome to the Range Assistant</Title>\n          <CarouselImage src={overview} alt=\"homepage overview\"/>\n          <Paragraph>\n            Use this web app to construct and view balanced Texas Hold'em preflop ranges. You can download your ranges\n            to share with others, transfer them to other devices or browsers, or for use with the Hold'em Poker Tools\n            Range Assistant desktop app.\n          </Paragraph>\n          <CarouselControls showPrev={false} showNext={true} showDone={false}/>\n        </div>\n        <div className=\"intro-slide\">\n          <Title level={3}>Import or Create New Ranges</Title>\n          <CarouselImage src={importImg} alt=\"frequency mode\"/>\n          <Paragraph>\n            Use the <PlusCircleOutlined/> Add Range button to get started adding new ranges to your database.\n            You can then import a range by dragging and dropping a previously exported <Text code> .range</Text> file or\n            create a new range using from a template. You can also duplicate existing ranges using the <CopyOutlined/> button.\n          </Paragraph>\n          <CarouselControls showPrev={true} showNext={true} showDone={false}/>\n        </div>\n        <div className=\"intro-slide\">\n          <Title level={3}>Assign Combo Weights</Title>\n          <CarouselImage src={weightsImg} alt=\"frequency mode\"/>\n          <Paragraph>\n            Build balanced ranges by mixing your preflop actions for certain combos. For example, if you wish to mix between\n            calling and 3 betting A5s, you simply click A5s in the combo matrix to select it and assign each action\n            (call and 3 Bet) an even weight of 1 and the range viewer will display the action weights in the hand matrix.\n          </Paragraph>\n          <CarouselControls showPrev={true} showNext={true} showDone={false}/>\n        </div>\n        <div className=\"intro-slide\">\n          <Title level={3}>Frequency Mode</Title>\n          <CarouselImage src={frequency} alt=\"frequency mode\"/>\n          <Paragraph>\n            When viewing your ranges from the <Text strong>My Ranges</Text> page, a \"sample\" of your range will be\n            displayed by default i.e. if a given combo is 50/50 weighted between fold and open, the app uses an RNG\n            to determine which action to take. The RNG is automatically refreshed periodically. However if you wish\n            to view the frequencies to make the decision yourself, you can simply toggle on frequency mode.\n          </Paragraph>\n          <CarouselControls showPrev={true} showNext={true} showDone={false}/>\n        </div>\n        <div className=\"intro-slide\">\n          <Title level={3}>Download and Share Your Ranges</Title>\n          <CarouselImage src={download} alt=\"frequency mode\"/>\n          <Paragraph>\n            <Alert className=\"gutter\" type=\"warning\" message={\n              <Text>\n                <Text strong> IMPORTANT: </Text>Your ranges are stored locally in your browser and will\n                <Text strong> not </Text> be accessible across devices/different browsers. You should download your\n                ranges to back them up and import them on different devices.</Text>\n            }/>\n          </Paragraph>\n          <CarouselControls showPrev={true} showNext={false} showDone={true}/>\n        </div>\n      </Carousel>\n    </Modal>\n  )\n\n}\n\nconst SiteHeader = ({ onOpenHelp }) => (\n  <Header className=\"site-layout-header\">\n    <img\n      alt=\"logo\"\n      height=\"60\"\n      src={logo}\n    />\n    <Link to=\"/\" className=\"logo-text\">\n      <span style={{ color: \"#000\"}}>Hold'em Poker Tools</span>\n      <br/>\n      <span style={{ color: \"#bd2829\"}}>Range Assistant</span>\n    </Link>\n    <div className=\"spacer\"/>\n    <Link to=\"/\" className=\"ant-btn-link\">My Ranges</Link>\n    <Button onClick={onOpenHelp} type=\"link\">How to Use</Button>\n  </Header>\n)\n\nconst SiteFooter = () => (\n  <Footer style={{ textAlign: \"center\" }}>\n    <Text>Hold'em Poker Tools: Range Assistant ©2020</Text>\n    <br />\n    <Text>\n      Hold'em Poker Tools projects are free for everyone to use. Show your support on Buy Me\n      a Coffee!\n    </Text>\n    <br />\n    <Space>\n      <a href=\"https://www.buymeacoffee.com/holdemtools\" target=\"_blank\" rel=\"noreferrer\">\n        <img\n          src=\"https://cdn.buymeacoffee.com/buttons/default-red.png\"\n          alt=\"Buy Me A Coffee\"\n          style={{ height: 41, width: 174, borderRadius: 5 }}\n        />\n      </a>\n      {os && (\n        <Button href={`https://github.com/HoldemPokerTools/RangeAssistant/releases/latest/download/Range-Assistant.${getOSAppExtensionIcon(os)}`} target=\"_blank\">\n          Download Range Assistant for {getOSIcon(os)} {os}\n        </Button>\n      )}\n    </Space>\n  </Footer>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}